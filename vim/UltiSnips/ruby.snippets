snippet rdLL "disable rubocop line length" w
# rubocop:disable Metrics/LineLength
endsnippet

snippet rdAbc "disable rubocop abc size" w
# rubocop:disable Metrics/AbcSize
endsnippet

snippet rdMl "rubocop:disable Metrics/MethodLength" w
# rubocop:disable Metrics/MethodLength
endsnippet

snippet rdAM "rubocop:disable Metrics/MethodLength,AbcSize" w
# rubocop:disable Metrics/MethodLength,AbcSize
endsnippet

snippet rd "rubocop:disable" w
# rubocop:disable $0
endsnippet

snippet rea "rubocop:enable All" w
# rubocop:enable all $0
endsnippet

snippet aliasm "alias_method" w
alias_method :${1:new_name}, :${2:old_name}$0
endsnippet

snippet alias "alias" w
alias ${1:new_name} ${2:old_name}$0
endsnippet

snippet claself "class << self" w
class << self
	$1
end$0
endsnippet

snippet inc "include '[Module]'" b
include ${1:Module}$0
endsnippet

snippet ext "extend '[Module]'" b
extend ${1:Module}$0
endsnippet

snippet ecla "error class" b
class ${1:MyErrorClass} < ${2:StandardError}${3:; }${3/(; )/(?1::\t)/}$4${3/(; )/(?1::\n)/}end
endsnippet

snippet frozen "frozen_string_literal: true" b
# frozen_string_literal: true
$0
endsnippet

snippet ar "attr_reader" b
# @!attribute [r] $1
attr_reader :${1:attribute}$0
endsnippet

snippet aw "attr_writer" b
# @!attribute [w] $1
attr_writer :${1:attribute}$0
endsnippet

snippet aa "attr_accessor" b
# @!attribute [rw] $1
attr_accessor :${1:attribute}$0
endsnippet

snippet au "autoload" b
autoload :${1:Constant}, '${2:path}'$0
endsnippet
