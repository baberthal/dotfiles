snippet copyr "Copyright" w
Copyright (c) `date +%Y` `git config user.name` <`git config user.email`>
endsnippet

global !p
from vimsnippets import foldmarker, make_box, get_comment_format
from uuid import uuid4
from skeleton_snippets import GetCommentFormat

# def commentout(str = None):
#     fmt = vim.eval("&commentstring")
#     if str == None:
# 	return fmt % ""
#     else:
# 	return fmt % str
# snip += commentout("  ")`Created by `contacts -Hm -f '%n' | sed 's/^[ \t]*//;s/[ \t]*$//'` on `date +%d/%m/%y``!p
# snip += blankln
endglobal

global !p
def make_line(width):
    beg, mid, end, i = (s.strip() for s in get_comment_format())
    width_inner = width - 3 - max(len(beg), len(i + end))

    line = beg + mid + width_inner * mid[0] + 2 * mid[0]
    return line
endglobal

# So they can be specialized
priority -5
snippet section "Section Line" b
`!p
width = int(vim.eval("&textwidth - (virtcol('.') == 1 ? 0 : virtcol('.'))")) or 71
parts = make_line(width)
snip.rv = "".join(parts)
`
endsnippet

snippet //f "file header" b
`!p
b, m, e, i = (s.strip() for s in get_comment_format())
snip.rv = b
` ${1:`!v expand('%')`}
endsnippet

snippet uuid "generate a random uuid" w
`!p
if not snip.c: snip.rv = str(uuid4())
`
endsnippet

snippet fold "Insert a vim fold marker" wsm
`!p snip.rv = get_comment_format()[0]` ${1:Fold description} `!p snip.rv = foldmarker()[0]`${2:1} `!p snip.rv = get_comment_format()[2]`
endsnippet

snippet foldc "Insert a vim fold close marker" wsm
`!p snip.rv = get_comment_format()[0]` ${2:1}`!p snip.rv = foldmarker()[1]` `!p snip.rv = get_comment_format()[2]`
endsnippet

snippet foldp "Insert a vim fold marker pair" wsm
`!p snip.rv = get_comment_format()[0]` ${1:Fold description} `!p snip.rv = ("{0} {1}".format(foldmarker()[0], get_comment_format()[2])).rstrip()`
${0:${VISUAL:Content}}
`!p snip.rv = get_comment_format()[0]` `!p snip.rv = foldmarker()[1]` $1 `!p snip.rv = ("{0}".format(get_comment_format()[2])).strip()`
endsnippet

snippet cf "" b
(`!p fmt = GetCommentFormat(); snip.rv =  fmt[0]`, `!p snip.rv = fmt[1]`, `!p snip.rv = fmt[2]`, `!p snip.rv = fmt[3]`)
endsnippet
