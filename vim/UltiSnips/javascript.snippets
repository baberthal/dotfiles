snippet str "use strict" b
'use strict';$0
endsnippet

snippet gre "var xx = require('gulp-xx')" b
const $1 = require("${2:gulp-}${1/([a-z])([A-Z])/$1-\l$2/g}")$3;$0
endsnippet

snippet re "var xx = require('xx')" b
const $1 = require("${2:${1/([a-z])([A-Z])/$1-\l$2/g}}")$3;$0
endsnippet

snippet gulpt "gulp.task(...)" b
gulp.task('$1', ($2) => {
	return ${3:gulp.src($4)}
});
endsnippet

snippet vaf
var ${1:function_name} = function($2) {
	$0
};
endsnippet

snippet f "function" w
function(${1:args}) {
	$2
}$0
endsnippet

snippet then "then(function())..." w
then(function(${1:args}) {
	$2
});$0
endsnippet

snippet ctor "constructor" w
constructor($1) {
	$0
}
endsnippet

snippet ret "return" w
return $1;$0
endsnippet

snippet ifi "inline if" w
if (${1:condition}) $2;$0
endsnippet

snippet // "'/* */' comment" b
/* $1 */$0
endsnippet

snippet //d "/** ... */ documentation comment" b
/**
 * $1
 */$0
endsnippet

snippet f// "File header" b
// ${1:`!v expand('%')`}$0
endsnippet

snippet f/* "/* file header */" b
/* ${1:`!v expand('%')`} */$0
endsnippet

snippet //es "/* eslint disable statement" w
/* eslint ${1:no-console}:${2:0} */$0
endsnippet
