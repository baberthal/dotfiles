export ZEXTRA_DIR="${ZEXTRA_DIR:=${HOME}/.zextra}"
# [[ -s "${ZEXTRA_DIR}/env.zsh" ]] && source "$ZEXTRA_DIR/env.zsh"
[[ -s "${ZEXTRA_DIR}/directories.zsh" ]] && source "$ZEXTRA_DIR/directories.zsh"

export TIMEFMT=$'\nreal\t%E\nuser\t%U\nsys\t%S'

unsetopt autonamedirs
setopt auto_pushd
setopt pushd_ignore_dups
setopt pushdminus

# unset zle_bracketed_paste

export BROWSER='open'
export EDITOR='vim'
export VISUAL='vim'
export PAGER='less'
bindkey -v

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export KEYTIMEOUT=1

export GOPATH=${HOME}/golang
export GOROOT=/usr/local/opt/go/libexec
export JBOSS_HOME=/usr/local/opt/jboss-as/libexec
export GROOVY_HOME=/usr/local/opt/groovy/libexec
export ECLIPSE_HOME="${HOME}/Applications/Eclipse.app/Contents/Eclipse"
export ANDROID_HOME=$HOME/projects/android/sdk
export NVMDIR="${HOME}/.nvm"
export USE_CCACHE=1

# [[ -d /Applications/Xcode-beta.app ]] && export PATH="/Applications/Xcode-beta.app/Contents/Developer/usr/bin:${PATH}"

typeset -gU cdpath fpath mailpath path
cdpath=(
  $cdpath
  ${HOME}/projects
)

path=(
  ${HOME}/bin
  /usr/local/{bin,sbin,heroku/bin}
  /Applications/Postgres.app/Contents/Versions/9.5/bin
  # /Applications/Xcode.app/Contents/Developer/usr/bin
  $path
  ${JBOSS_HOME}/bin
  ${HOME}/Library/Developer
  ${GOPATH}/bin
  ${GOROOT}/bin
)

fpath=(
  ${HOME}/.zextra/completions
  ${HOME}/.zextra/functions
  $fpath
)

[[ -x /usr/libexec/java_home ]] && export JAVA_HOME="$(/usr/libexec/java_home)"
[[ -f "${HOME}/.env" ]] && source "${HOME}/.env"

export LESS='-F -g -i -M -R -S -w -X -z-4'

if (( $#commands[(i)lesspipe(|.sh)] )); then
  export LESSOPEN="| /usr/bin/env $commands[(i)lesspipe(|.sh)] %s 2>&-"
fi

if [[ ! -d "$TMPDIR" ]]; then
  export TMPDIR="/tmp/$LOGNAME"
  mkdir -p -m 700 "$TMPDIR"
fi

TMPPREFIX="${TMPDIR%/}/zsh"

# start typing + [Up-Arrow] - fuzzy find history forward
if [[ "${terminfo[kcuu1]}" != "" ]]; then
  autoload -U up-line-or-beginning-search
  zle -N up-line-or-beginning-search
  bindkey "${terminfo[kcuu1]}" up-line-or-beginning-search
fi

# start typing + [Down-Arrow] - fuzzy find history backward
if [[ "${terminfo[kcud1]}" != "" ]]; then
  autoload -U down-line-or-beginning-search
  zle -N down-line-or-beginning-search
  bindkey "${terminfo[kcud1]}" down-line-or-beginning-search
fi
#  vim: set ts=8 sw=2 tw=0 ft=zsh et :
